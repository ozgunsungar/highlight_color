# -*- coding: utf-8 -*-
"""HW3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19oeQ6Q8W-IysvGEKYuy7_cq6e1PSb3GU
"""

import numpy as np
import cv2
from google.colab.patches import cv2_imshow

#download image
!wget -O image.jpg https://i.stack.imgur.com/dd9tg.jpg

# open an image using opencv
img = cv2.imread('image.jpg')
# get image height and width
height, width, channels = img.shape

scale_percent = 60  # percent of original size
width = int(width * scale_percent / 100)
height = int(height * scale_percent / 100)
dim = (width, height)
img = cv2.resize(img, dim, interpolation=cv2.INTER_AREA)
cv2_imshow(img)

#convert the BGR image to HSV colour space
hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)
#obtain the grayscale image of the original image
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# set the bounds for the red hue
#np.array([h.min , s.min ,v.min]) for lower_red

lower_red = np.array([120,0,0])
upper_red = np.array([180,255,255])

# # lower mask (0-10)
# lower_red = np.array([0,10,50])
# upper_red = np.array([10,255,255])
# mask0 = cv2.inRange(hsv, lower_red, upper_red)

# # upper mask (170-180)
# lower_red = np.array([170,50,50])
# upper_red = np.array([180,255,255])
# mask1 = cv2.inRange(hsv, lower_red, upper_red)

# join my masks
# mask = mask0+mask1

# create a mask using the bounds set
mask = cv2.inRange(hsv, lower_red, upper_red)
# create an inverse of the mask
mask_inv = cv2.bitwise_not(mask)
# Filter only the red colour from the original image using the mask(foreground)
res = cv2.bitwise_and(img, img, mask=mask)
# Filter the regions containing colours other than red from the grayscale image(background)
background = cv2.bitwise_and(gray, gray, mask = mask_inv)

# convert the one channelled grayscale background to a three channelled image
background = np.stack((background,)*3, axis=-1)
# add the foreground and the background
img_highlighted = cv2.add(res, background)

cv2_imshow(img_highlighted)

# save image using opencv
cv2.imwrite('highlighted_apple.jpg', img_highlighted)